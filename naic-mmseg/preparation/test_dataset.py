from mmseg.datasets import build_dataset
import mmcv


config = "../configs/hrnet/fcn_hr18_512x1024_40k_cityscapes.py"
cfg = mmcv.Config.fromfile(config)
train_dataset = build_dataset(cfg.data.train)
val_dataset = build_dataset(cfg.data.val)
test_dataset = build_dataset(cfg.data.test)
print(train_dataset[0])
print("\n"+"#"*100+"\n")
print(val_dataset[0])
print("\n"+"#"*100+"\n")
print(test_dataset[0])

'''
   if you see this means success!
   
   {'img_metas': DataContainer({'filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/train/10002318.jpg', 'ori_filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/train/10002318.jpg', 'ori_shape': (1080, 1920, 3), 'img_shape': (512, 1024, 3), 'pad_shape': (512, 1024, 3), 'scale_factor': array([0.79791665, 0.79814816, 0.79791665, 0.79814816], dtype=float32), 'flip': False, 'flip_direction': 'horizontal', 'img_norm_cfg': {'mean': array([123.675, 116.28 , 103.53 ], dtype=float32), 'std': array([58.395, 57.12 , 57.375], dtype=float32), 'to_rgb': True}}), 'img': DataContainer(tensor([[[-0.0287, -0.0287, -0.0287,  ..., -0.9534, -0.9534, -0.9534],
         [-0.0287, -0.0287, -0.0287,  ..., -0.9363, -0.9363, -0.9363],
         [-0.0287, -0.0287, -0.0287,  ..., -0.9192, -0.9192, -0.9192],
         ...,
         [ 0.3309,  0.4337,  0.4337,  ...,  0.6221,  0.6734,  0.7762],
         [ 0.6906,  0.6734,  0.6563,  ...,  0.5707,  0.6734,  0.8276],
         [-0.4226, -0.5253, -0.5596,  ...,  0.5022,  0.7419,  0.8447]],

        [[ 0.5553,  0.5553,  0.5728,  ..., -0.2500, -0.2500, -0.2500],
         [ 0.5728,  0.5728,  0.5728,  ..., -0.2325, -0.2325, -0.2325],
         [ 0.5728,  0.5728,  0.5728,  ..., -0.2150, -0.2150, -0.2150],
         ...,
         [ 0.6604,  0.7129,  0.7304,  ...,  0.9405,  0.9930,  1.0980],
         [ 0.9580,  0.9230,  0.9055,  ...,  0.8880,  0.9930,  1.1506],
         [-0.2325, -0.3375, -0.3725,  ...,  0.8179,  1.0630,  1.1681]],

        [[ 1.4897,  1.4897,  1.5071,  ...,  0.7576,  0.7576,  0.7576],
         [ 1.5071,  1.5071,  1.5071,  ...,  0.7751,  0.7751,  0.7751],
         [ 1.5071,  1.5071,  1.5071,  ...,  0.7925,  0.7925,  0.7925],
         ...,
         [ 0.6531,  0.7228,  0.7054,  ...,  1.0191,  1.0539,  1.1585],
         [ 0.9668,  0.9319,  0.9145,  ...,  0.9668,  1.0714,  1.2282],
         [-0.2010, -0.3230, -0.3404,  ...,  0.9319,  1.1411,  1.2457]]])), 'gt_semantic_seg': DataContainer(tensor([[[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]]]))}

####################################################################################################

{'img_metas': [DataContainer({'filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/val/10002061.jpg', 'ori_filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/val/10002061.jpg', 'ori_shape': (720, 1280, 3), 'img_shape': (1024, 1820, 3), 'pad_shape': (1024, 1820, 3), 'scale_factor': array([1.421875 , 1.4222223, 1.421875 , 1.4222223], dtype=float32), 'flip': False, 'flip_direction': 'horizontal', 'img_norm_cfg': {'mean': array([123.675, 116.28 , 103.53 ], dtype=float32), 'std': array([58.395, 57.12 , 57.375], dtype=float32), 'to_rgb': True}})], 'img': [tensor([[[ 1.6667,  1.3070,  0.8789,  ..., -1.1932, -1.6727, -2.0152],
         [ 1.4440,  1.1187,  0.7248,  ..., -1.5185, -1.8953, -2.0665],
         [ 1.1700,  0.8961,  0.6049,  ..., -1.7754, -1.9638, -1.9809],
         ...,
         [-1.2274, -1.2274, -1.2274,  ..., -1.3987, -1.4158, -1.4158],
         [-1.2274, -1.2103, -1.2103,  ..., -1.4158, -1.4158, -1.4158],
         [-1.2103, -1.2103, -1.1932,  ..., -1.4158, -1.4158, -1.4158]],

        [[ 1.9384,  1.5707,  1.1331,  ..., -1.0728, -1.5630, -1.9132],
         [ 1.7108,  1.3606,  0.9755,  ..., -1.4055, -1.7906, -1.9657],
         [ 1.4307,  1.1506,  0.8529,  ..., -1.6681, -1.8606, -1.8782],
         ...,
         [-1.1254, -1.1254, -1.1254,  ..., -1.2304, -1.2304, -1.2304],
         [-1.1254, -1.1078, -1.1078,  ..., -1.2304, -1.2304, -1.2304],
         [-1.1078, -1.1078, -1.0903,  ..., -1.2479, -1.2304, -1.2304]],

        [[ 2.1171,  1.7511,  1.3154,  ..., -0.9330, -1.4384, -1.7870],
         [ 1.8731,  1.5594,  1.1585,  ..., -1.2816, -1.6302, -1.8044],
         [ 1.6117,  1.3328,  1.0365,  ..., -1.5256, -1.6999, -1.6824],
         ...,
         [-0.8981, -0.8981, -0.8981,  ..., -1.1073, -1.1073, -1.1073],
         [-0.8981, -0.8807, -0.8807,  ..., -1.1073, -1.1073, -1.1073],
         [-0.8807, -0.8807, -0.8633,  ..., -1.1073, -1.1073, -1.1073]]])]}

####################################################################################################

{'img_metas': [DataContainer({'filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/val/10002061.jpg', 'ori_filename': '/raid/ours_data/Competition/baidu-laneline/data/my_dataset/img_dir/val/10002061.jpg', 'ori_shape': (720, 1280, 3), 'img_shape': (1024, 1820, 3), 'pad_shape': (1024, 1820, 3), 'scale_factor': array([1.421875 , 1.4222223, 1.421875 , 1.4222223], dtype=float32), 'flip': False, 'flip_direction': 'horizontal', 'img_norm_cfg': {'mean': array([123.675, 116.28 , 103.53 ], dtype=float32), 'std': array([58.395, 57.12 , 57.375], dtype=float32), 'to_rgb': True}})], 'img': [tensor([[[ 1.6667,  1.3070,  0.8789,  ..., -1.1932, -1.6727, -2.0152],
         [ 1.4440,  1.1187,  0.7248,  ..., -1.5185, -1.8953, -2.0665],
         [ 1.1700,  0.8961,  0.6049,  ..., -1.7754, -1.9638, -1.9809],
         ...,
         [-1.2274, -1.2274, -1.2274,  ..., -1.3987, -1.4158, -1.4158],
         [-1.2274, -1.2103, -1.2103,  ..., -1.4158, -1.4158, -1.4158],
         [-1.2103, -1.2103, -1.1932,  ..., -1.4158, -1.4158, -1.4158]],

        [[ 1.9384,  1.5707,  1.1331,  ..., -1.0728, -1.5630, -1.9132],
         [ 1.7108,  1.3606,  0.9755,  ..., -1.4055, -1.7906, -1.9657],
         [ 1.4307,  1.1506,  0.8529,  ..., -1.6681, -1.8606, -1.8782],
         ...,
         [-1.1254, -1.1254, -1.1254,  ..., -1.2304, -1.2304, -1.2304],
         [-1.1254, -1.1078, -1.1078,  ..., -1.2304, -1.2304, -1.2304],
         [-1.1078, -1.1078, -1.0903,  ..., -1.2479, -1.2304, -1.2304]],

        [[ 2.1171,  1.7511,  1.3154,  ..., -0.9330, -1.4384, -1.7870],
         [ 1.8731,  1.5594,  1.1585,  ..., -1.2816, -1.6302, -1.8044],
         [ 1.6117,  1.3328,  1.0365,  ..., -1.5256, -1.6999, -1.6824],
         ...,
         [-0.8981, -0.8981, -0.8981,  ..., -1.1073, -1.1073, -1.1073],
         [-0.8981, -0.8807, -0.8807,  ..., -1.1073, -1.1073, -1.1073],
         [-0.8807, -0.8807, -0.8633,  ..., -1.1073, -1.1073, -1.1073]]])]}
'''
